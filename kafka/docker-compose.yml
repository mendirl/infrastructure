services:

  kafka:
    image: apache/kafka
    hostname: kafka
    container_name: kafka
    restart: always
#    environment:
#      KAFKA_NODE_ID: 1
#      KAFKA_PROCESS_ROLES: broker,controller
#      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#      KAFKA_NUM_PARTITIONS: 3
    networks:
      - syno_traefik
#    volumes:
#      - "/volume1/docker/postgresql/data:/var/lib/postgresql/data"
    labels:
      - "traefik.enable=true"
#      - "traefik.http.routers.keycloak.entrypoints=web,websecure"
#      - "traefik.http.routers.keycloak.rule=Host(`kafka.mend.ovh`)"
#      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      - "traefik.tcp.routers.kafka.entrypoints=tcp_kafka"
      - "traefik.tcp.routers.kafka.rule=HostSNI(`*`)"
      - "traefik.tcp.services.kafka.loadbalancer.server.port=9092"


networks:
  syno_traefik:
    external: true
